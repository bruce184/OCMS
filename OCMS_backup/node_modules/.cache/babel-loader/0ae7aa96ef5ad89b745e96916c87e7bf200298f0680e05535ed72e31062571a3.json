{"ast":null,"code":"import{UserModel}from'../models/UserModel';// AuthController - Xử lý logic điều khiển authentication\n// Sync với database schema OCMS1\nexport class AuthController{// Đăng nhập\nstatic async login(username,password){try{// Validate input\nif(!username||!password){return{success:false,error:'Username and password are required'};}// Authenticate user\nconst user=UserModel.authenticate(username,password);if(!user){return{success:false,error:'Invalid username or password'};}// Set current user\nthis.currentUser=user;// Store in localStorage (in real app, use secure token)\nlocalStorage.setItem('currentUser',JSON.stringify(user));return{success:true,user};}catch(error){return{success:false,error:'Login failed. Please try again.'};}}// Đăng xuất\nstatic logout(){try{this.currentUser=null;localStorage.removeItem('currentUser');return{success:true};}catch(error){return{success:false};}}// Kiểm tra trạng thái đăng nhập\nstatic isLoggedIn(){return this.currentUser!==null;}// Lấy thông tin user hiện tại\nstatic getCurrentUser(){if(!this.currentUser){// Try to restore from localStorage\nconst storedUser=localStorage.getItem('currentUser');if(storedUser){this.currentUser=JSON.parse(storedUser);}}return this.currentUser;}// Kiểm tra quyền truy cập\nstatic hasPermission(permission){const user=this.getCurrentUser();if(!user)return false;return UserModel.hasPermission(user.userId,permission);}// Kiểm tra role\nstatic hasRole(role){const user=this.getCurrentUser();return(user===null||user===void 0?void 0:user.role)===role;}// Lấy role hiện tại\nstatic getCurrentRole(){const user=this.getCurrentUser();return(user===null||user===void 0?void 0:user.role)||null;}// Cập nhật thông tin user\nstatic updateUserProfile(updates){try{const currentUser=this.getCurrentUser();if(!currentUser){return{success:false,error:'User not logged in'};}const updatedUser=UserModel.updateUser(currentUser.userId,updates);if(!updatedUser){return{success:false,error:'Failed to update user'};}// Update current user\nthis.currentUser=updatedUser;localStorage.setItem('currentUser',JSON.stringify(updatedUser));return{success:true,user:updatedUser};}catch(error){return{success:false,error:'Update failed. Please try again.'};}}// Đổi mật khẩu (mock)\nstatic changePassword(currentPassword,newPassword){try{const user=this.getCurrentUser();if(!user){return{success:false,error:'User not logged in'};}// Mock password validation\nif(currentPassword!=='password123'){return{success:false,error:'Current password is incorrect'};}// In real app, update password in database\nreturn{success:true};}catch(error){return{success:false,error:'Password change failed. Please try again.'};}}// Khởi tạo authentication state\nstatic initializeAuth(){const storedUser=localStorage.getItem('currentUser');if(storedUser){try{this.currentUser=JSON.parse(storedUser);}catch(error){localStorage.removeItem('currentUser');}}}}AuthController.currentUser=null;","map":{"version":3,"names":["UserModel","AuthController","login","username","password","success","error","user","authenticate","currentUser","localStorage","setItem","JSON","stringify","logout","removeItem","isLoggedIn","getCurrentUser","storedUser","getItem","parse","hasPermission","permission","userId","hasRole","role","getCurrentRole","updateUserProfile","updates","updatedUser","updateUser","changePassword","currentPassword","newPassword","initializeAuth"],"sources":["D:/1. UMT/01. SUBJECTS/2. INTRO TO S.E/PROJECT/OCMS-FRONTEND-UI/src/controllers/AuthController.ts"],"sourcesContent":["import { User } from '../models';\r\nimport { UserModel } from '../models/UserModel';\r\n\r\n// AuthController - Xử lý logic điều khiển authentication\r\n// Sync với database schema OCMS1\r\nexport class AuthController {\r\n  private static currentUser: User | null = null;\r\n\r\n  // Đăng nhập\r\n  static async login(username: string, password: string): Promise<{ success: boolean; user?: User; error?: string }> {\r\n    try {\r\n      // Validate input\r\n      if (!username || !password) {\r\n        return { success: false, error: 'Username and password are required' };\r\n      }\r\n\r\n      // Authenticate user\r\n      const user = UserModel.authenticate(username, password);\r\n      if (!user) {\r\n        return { success: false, error: 'Invalid username or password' };\r\n      }\r\n\r\n      // Set current user\r\n      this.currentUser = user;\r\n\r\n      // Store in localStorage (in real app, use secure token)\r\n      localStorage.setItem('currentUser', JSON.stringify(user));\r\n\r\n      return { success: true, user };\r\n    } catch (error) {\r\n      return { success: false, error: 'Login failed. Please try again.' };\r\n    }\r\n  }\r\n\r\n  // Đăng xuất\r\n  static logout(): { success: boolean } {\r\n    try {\r\n      this.currentUser = null;\r\n      localStorage.removeItem('currentUser');\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false };\r\n    }\r\n  }\r\n\r\n  // Kiểm tra trạng thái đăng nhập\r\n  static isLoggedIn(): boolean {\r\n    return this.currentUser !== null;\r\n  }\r\n\r\n  // Lấy thông tin user hiện tại\r\n  static getCurrentUser(): User | null {\r\n    if (!this.currentUser) {\r\n      // Try to restore from localStorage\r\n      const storedUser = localStorage.getItem('currentUser');\r\n      if (storedUser) {\r\n        this.currentUser = JSON.parse(storedUser);\r\n      }\r\n    }\r\n    return this.currentUser;\r\n  }\r\n\r\n  // Kiểm tra quyền truy cập\r\n  static hasPermission(permission: string): boolean {\r\n    const user = this.getCurrentUser();\r\n    if (!user) return false;\r\n    return UserModel.hasPermission(user.userId, permission);\r\n  }\r\n\r\n  // Kiểm tra role\r\n  static hasRole(role: 'student' | 'lecturer' | 'admin'): boolean {\r\n    const user = this.getCurrentUser();\r\n    return user?.role === role;\r\n  }\r\n\r\n  // Lấy role hiện tại\r\n  static getCurrentRole(): 'student' | 'lecturer' | 'admin' | null {\r\n    const user = this.getCurrentUser();\r\n    return user?.role || null;\r\n  }\r\n\r\n  // Cập nhật thông tin user\r\n  static updateUserProfile(updates: Partial<User>): { success: boolean; user?: User; error?: string } {\r\n    try {\r\n      const currentUser = this.getCurrentUser();\r\n      if (!currentUser) {\r\n        return { success: false, error: 'User not logged in' };\r\n      }\r\n\r\n      const updatedUser = UserModel.updateUser(currentUser.userId, updates);\r\n      if (!updatedUser) {\r\n        return { success: false, error: 'Failed to update user' };\r\n      }\r\n\r\n      // Update current user\r\n      this.currentUser = updatedUser;\r\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\r\n\r\n      return { success: true, user: updatedUser };\r\n    } catch (error) {\r\n      return { success: false, error: 'Update failed. Please try again.' };\r\n    }\r\n  }\r\n\r\n  // Đổi mật khẩu (mock)\r\n  static changePassword(currentPassword: string, newPassword: string): { success: boolean; error?: string } {\r\n    try {\r\n      const user = this.getCurrentUser();\r\n      if (!user) {\r\n        return { success: false, error: 'User not logged in' };\r\n      }\r\n\r\n      // Mock password validation\r\n      if (currentPassword !== 'password123') {\r\n        return { success: false, error: 'Current password is incorrect' };\r\n      }\r\n\r\n      // In real app, update password in database\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Password change failed. Please try again.' };\r\n    }\r\n  }\r\n\r\n  // Khởi tạo authentication state\r\n  static initializeAuth(): void {\r\n    const storedUser = localStorage.getItem('currentUser');\r\n    if (storedUser) {\r\n      try {\r\n        this.currentUser = JSON.parse(storedUser);\r\n      } catch (error) {\r\n        localStorage.removeItem('currentUser');\r\n      }\r\n    }\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}